module Problem2

// Problem 2:
// By considering the terms in the Fibonacci sequence whose values do not exceed
// four million, find the sum of the even-valued terms.
//
// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

let fib n =
    let m = System.Collections.Generic.Dictionary()

    let rec f n =
         if m.ContainsKey(n) then m.Item(n)
         else match n with
              | 1 -> m.Add(1,1); 1
              | 2 -> m.Add(2,2); 2
              | _ -> let x = f (n-1) + f (n-2)
                     m.Add(n, x)
                     x
    f n

let rec nth n =
    let m = fib n
    if m < 4000000 then nth (n+1) else m
// > nth 1;;
// val it : int = 5702887

let rec mth m =
    let n = fib m
    if n < 4000000 then mth (m+1) else m
// > mth 1;;
// val it : int = 33

let fibs m =
    let rec f n =
        if n<=m then
           fib n :: f (n+1)
        else
           []
    f 1

let fs = fibs 32

let evenP n = n % 2 = 0

fs |> List.filter evenP |> List.sum |> printfn "%d" // 4613732.
fibs 32 |> List.filter evenP |> List.sum |> printfn "%d" // 4613732.

// Based on http://fsharp-euler.wikispaces.com/euler+002:
//let fibs = Seq.unfold (fun (a,b) -> Some (a+b, (b, a+b))) (0,1)
//fibs |> Seq.takeWhile (fun n -> n<=4000000) |> Seq.sumBy (fun n -> if n%2=0 then n else 0) |> printfn "%d"